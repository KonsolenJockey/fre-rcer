/*
* generated by Xtext
*/
grammar InternalRFCMapping;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package net.sf.rcer.rfcgen.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package net.sf.rcer.rfcgen.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import net.sf.rcer.rfcgen.services.RFCMappingGrammarAccess;

}

@parser::members {

 	private RFCMappingGrammarAccess grammarAccess;
 	
    public InternalRFCMappingParser(TokenStream input, IAstFactory factory, RFCMappingGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("net/sf/rcer/rfcgen/parser/antlr/internal/InternalRFCMapping.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected RFCMappingGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelRule(), currentNode); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'package' 
    {
        createLeafNode(grammarAccess.getModelAccess().getPackageKeyword_0(), null); 
    }
(
(
		lv_packageName_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getModelAccess().getPackageNameSTRINGTerminalRuleCall_1_0(), "packageName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"packageName",
	        		lv_packageName_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getStructuresStructureParserRuleCall_2_0(), currentNode); 
	    }
		lv_structures_2_0=ruleStructure		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"structures",
	        		lv_structures_2_0, 
	        		"Structure", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getFunctionModulesFunctionModuleParserRuleCall_3_0(), currentNode); 
	    }
		lv_functionModules_3_0=ruleFunctionModule		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functionModules",
	        		lv_functionModules_3_0, 
	        		"FunctionModule", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleStructure
entryRuleStructure returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStructureRule(), currentNode); }
	 iv_ruleStructure=ruleStructure 
	 { $current=$iv_ruleStructure.current; } 
	 EOF 
;

// Rule Structure
ruleStructure returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'structure' 
    {
        createLeafNode(grammarAccess.getStructureAccess().getStructureKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getStructureAccess().getNameSTRINGTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructureRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getStructureAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStructureAccess().getMappingStructureMappingParserRuleCall_3_0(), currentNode); 
	    }
		lv_mapping_3_0=ruleStructureMapping		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructureRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mapping",
	        		lv_mapping_3_0, 
	        		"StructureMapping", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getStructureAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleStructureMapping
entryRuleStructureMapping returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStructureMappingRule(), currentNode); }
	 iv_ruleStructureMapping=ruleStructureMapping 
	 { $current=$iv_ruleStructureMapping.current; } 
	 EOF 
;

// Rule StructureMapping
ruleStructureMapping returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getStructureMappingAccess().getStructurePOJOMappingParserRuleCall(), currentNode); 
    }
    this_StructurePOJOMapping_0=ruleStructurePOJOMapping
    { 
        $current = $this_StructurePOJOMapping_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleStructurePOJOMapping
entryRuleStructurePOJOMapping returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStructurePOJOMappingRule(), currentNode); }
	 iv_ruleStructurePOJOMapping=ruleStructurePOJOMapping 
	 { $current=$iv_ruleStructurePOJOMapping.current; } 
	 EOF 
;

// Rule StructurePOJOMapping
ruleStructurePOJOMapping returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'class' 
    {
        createLeafNode(grammarAccess.getStructurePOJOMappingAccess().getClassKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getStructurePOJOMappingAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructurePOJOMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getStructurePOJOMappingAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStructurePOJOMappingAccess().getFieldsStructureFieldPOJOMappingParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_fields_3_0=ruleStructureFieldPOJOMapping		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructurePOJOMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"fields",
	        		lv_fields_3_0, 
	        		"StructureFieldPOJOMapping", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getStructurePOJOMappingAccess().getSemicolonKeyword_3_1(), null); 
    }
)*	'}' 
    {
        createLeafNode(grammarAccess.getStructurePOJOMappingAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleStructureFieldPOJOMapping
entryRuleStructureFieldPOJOMapping returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStructureFieldPOJOMappingRule(), currentNode); }
	 iv_ruleStructureFieldPOJOMapping=ruleStructureFieldPOJOMapping 
	 { $current=$iv_ruleStructureFieldPOJOMapping.current; } 
	 EOF 
;

// Rule StructureFieldPOJOMapping
ruleStructureFieldPOJOMapping returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'field' 
    {
        createLeafNode(grammarAccess.getStructureFieldPOJOMappingAccess().getFieldKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getStructureFieldPOJOMappingAccess().getNameSTRINGTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructureFieldPOJOMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getStructureFieldPOJOMappingAccess().getEqualsSignKeyword_2(), null); 
    }
((
(
		lv_inactive_3_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getStructureFieldPOJOMappingAccess().getInactiveInactiveKeyword_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructureFieldPOJOMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStructureFieldPOJOMappingAccess().getTypeDataTypeEnumRuleCall_3_1_0_0(), currentNode); 
	    }
		lv_type_4_0=ruleDataType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructureFieldPOJOMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_4_0, 
	        		"DataType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_attribute_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getStructureFieldPOJOMappingAccess().getAttributeIDTerminalRuleCall_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructureFieldPOJOMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))(	'comment' 
    {
        createLeafNode(grammarAccess.getStructureFieldPOJOMappingAccess().getCommentKeyword_4_0(), null); 
    }
(
(
		lv_comment_7_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getStructureFieldPOJOMappingAccess().getCommentSTRINGTerminalRuleCall_4_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructureFieldPOJOMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_7_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?)
;





// Entry rule entryRuleFunctionModule
entryRuleFunctionModule returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModuleRule(), currentNode); }
	 iv_ruleFunctionModule=ruleFunctionModule 
	 { $current=$iv_ruleFunctionModule.current; } 
	 EOF 
;

// Rule FunctionModule
ruleFunctionModule returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'function' 
    {
        createLeafNode(grammarAccess.getFunctionModuleAccess().getFunctionKeyword_0(), null); 
    }
	'module' 
    {
        createLeafNode(grammarAccess.getFunctionModuleAccess().getModuleKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModuleAccess().getNameSTRINGTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getFunctionModuleAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionModuleAccess().getMappingFunctionModuleMappingParserRuleCall_4_0(), currentNode); 
	    }
		lv_mapping_4_0=ruleFunctionModuleMapping		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mapping",
	        		lv_mapping_4_0, 
	        		"FunctionModuleMapping", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getFunctionModuleAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleFunctionModuleMapping
entryRuleFunctionModuleMapping returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModuleMappingRule(), currentNode); }
	 iv_ruleFunctionModuleMapping=ruleFunctionModuleMapping 
	 { $current=$iv_ruleFunctionModuleMapping.current; } 
	 EOF 
;

// Rule FunctionModuleMapping
ruleFunctionModuleMapping returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getFunctionModuleMappingAccess().getFunctionModulePOJOMappingParserRuleCall(), currentNode); 
    }
    this_FunctionModulePOJOMapping_0=ruleFunctionModulePOJOMapping
    { 
        $current = $this_FunctionModulePOJOMapping_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleFunctionModulePOJOMapping
entryRuleFunctionModulePOJOMapping returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModulePOJOMappingRule(), currentNode); }
	 iv_ruleFunctionModulePOJOMapping=ruleFunctionModulePOJOMapping 
	 { $current=$iv_ruleFunctionModulePOJOMapping.current; } 
	 EOF 
;

// Rule FunctionModulePOJOMapping
ruleFunctionModulePOJOMapping returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOMappingAccess().getFunctionModulePOJOCallMappingParserRuleCall_0(), currentNode); 
    }
    this_FunctionModulePOJOCallMapping_0=ruleFunctionModulePOJOCallMapping
    { 
        $current = $this_FunctionModulePOJOCallMapping_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOMappingAccess().getFunctionModulePOJORequestResponseMappingParserRuleCall_1(), currentNode); 
    }
    this_FunctionModulePOJORequestResponseMapping_1=ruleFunctionModulePOJORequestResponseMapping
    { 
        $current = $this_FunctionModulePOJORequestResponseMapping_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleFunctionModulePOJOCallMapping
entryRuleFunctionModulePOJOCallMapping returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModulePOJOCallMappingRule(), currentNode); }
	 iv_ruleFunctionModulePOJOCallMapping=ruleFunctionModulePOJOCallMapping 
	 { $current=$iv_ruleFunctionModulePOJOCallMapping.current; } 
	 EOF 
;

// Rule FunctionModulePOJOCallMapping
ruleFunctionModulePOJOCallMapping returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'class' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOCallMappingAccess().getClassKeyword_0(), null); 
    }
(
(
		lv_className_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOCallMappingAccess().getClassNameIDTerminalRuleCall_1_0(), "className"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOCallMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"className",
	        		lv_className_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOCallMappingAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOCallMappingAccess().getParametersFunctionModulePOJOParameterMappingParserRuleCall_3_0(), currentNode); 
	    }
		lv_parameters_3_0=ruleFunctionModulePOJOParameterMapping		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOCallMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_3_0, 
	        		"FunctionModulePOJOParameterMapping", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOCallMappingAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleFunctionModulePOJORequestResponseMapping
entryRuleFunctionModulePOJORequestResponseMapping returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModulePOJORequestResponseMappingRule(), currentNode); }
	 iv_ruleFunctionModulePOJORequestResponseMapping=ruleFunctionModulePOJORequestResponseMapping 
	 { $current=$iv_ruleFunctionModulePOJORequestResponseMapping.current; } 
	 EOF 
;

// Rule FunctionModulePOJORequestResponseMapping
ruleFunctionModulePOJORequestResponseMapping returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'request' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getRequestKeyword_0(), null); 
    }
	'class' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getClassKeyword_1(), null); 
    }
(
(
		lv_requestClassName_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getRequestClassNameIDTerminalRuleCall_2_0(), "requestClassName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJORequestResponseMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"requestClassName",
	        		lv_requestClassName_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getRequestParametersFunctionModulePOJOParameterMappingParserRuleCall_4_0(), currentNode); 
	    }
		lv_requestParameters_4_0=ruleFunctionModulePOJOParameterMapping		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJORequestResponseMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"requestParameters",
	        		lv_requestParameters_4_0, 
	        		"FunctionModulePOJOParameterMapping", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getRightCurlyBracketKeyword_5(), null); 
    }
	'response' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getResponseKeyword_6(), null); 
    }
	'class' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getClassKeyword_7(), null); 
    }
(
(
		lv_responseClassName_8_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getResponseClassNameIDTerminalRuleCall_8_0(), "responseClassName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJORequestResponseMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"responseClassName",
	        		lv_responseClassName_8_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getLeftCurlyBracketKeyword_9(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getResponseParametersFunctionModulePOJOParameterMappingParserRuleCall_10_0(), currentNode); 
	    }
		lv_responseParameters_10_0=ruleFunctionModulePOJOParameterMapping		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJORequestResponseMappingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"responseParameters",
	        		lv_responseParameters_10_0, 
	        		"FunctionModulePOJOParameterMapping", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJORequestResponseMappingAccess().getRightCurlyBracketKeyword_11(), null); 
    }
)
;





// Entry rule entryRuleFunctionModulePOJOParameterMapping
entryRuleFunctionModulePOJOParameterMapping returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModulePOJOParameterMappingRule(), currentNode); }
	 iv_ruleFunctionModulePOJOParameterMapping=ruleFunctionModulePOJOParameterMapping 
	 { $current=$iv_ruleFunctionModulePOJOParameterMapping.current; } 
	 EOF 
;

// Rule FunctionModulePOJOParameterMapping
ruleFunctionModulePOJOParameterMapping returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOParameterMappingAccess().getFunctionModulePOJOImportingParameterParserRuleCall_0(), currentNode); 
    }
    this_FunctionModulePOJOImportingParameter_0=ruleFunctionModulePOJOImportingParameter
    { 
        $current = $this_FunctionModulePOJOImportingParameter_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOParameterMappingAccess().getFunctionModulePOJOExportingParameterParserRuleCall_1(), currentNode); 
    }
    this_FunctionModulePOJOExportingParameter_1=ruleFunctionModulePOJOExportingParameter
    { 
        $current = $this_FunctionModulePOJOExportingParameter_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOParameterMappingAccess().getFunctionModulePOJOChangingParameterParserRuleCall_2(), currentNode); 
    }
    this_FunctionModulePOJOChangingParameter_2=ruleFunctionModulePOJOChangingParameter
    { 
        $current = $this_FunctionModulePOJOChangingParameter_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOParameterMappingAccess().getFunctionModulePOJOTablesParameterParserRuleCall_3(), currentNode); 
    }
    this_FunctionModulePOJOTablesParameter_3=ruleFunctionModulePOJOTablesParameter
    { 
        $current = $this_FunctionModulePOJOTablesParameter_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleFunctionModulePOJOImportingParameter
entryRuleFunctionModulePOJOImportingParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModulePOJOImportingParameterRule(), currentNode); }
	 iv_ruleFunctionModulePOJOImportingParameter=ruleFunctionModulePOJOImportingParameter 
	 { $current=$iv_ruleFunctionModulePOJOImportingParameter.current; } 
	 EOF 
;

// Rule FunctionModulePOJOImportingParameter
ruleFunctionModulePOJOImportingParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'importing' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getImportingKeyword_0(), null); 
    }
((	'field' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getFieldKeyword_1_0_0(), null); 
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getNameSTRINGTerminalRuleCall_1_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getEqualsSignKeyword_1_0_2(), null); 
    }
((
(
		lv_inactive_4_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getInactiveInactiveKeyword_1_0_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getTypeDataTypeEnumRuleCall_1_0_3_1_0_0(), currentNode); 
	    }
		lv_type_5_0=ruleDataType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_5_0, 
	        		"DataType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_attribute_6_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getAttributeIDTerminalRuleCall_1_0_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_6_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))))
    |(	'structure' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getStructureKeyword_1_1_0(), null); 
    }
(
(
		lv_name_8_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getNameSTRINGTerminalRuleCall_1_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_8_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getEqualsSignKeyword_1_1_2(), null); 
    }
((
(
		lv_inactive_10_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getInactiveInactiveKeyword_1_1_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getStructureStructurePOJOMappingCrossReference_1_1_3_1_0_0(), "structure"); 
	}

)
)(
(
		lv_attribute_12_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getAttributeIDTerminalRuleCall_1_1_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_12_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))))
    |((
(
		lv_table_13_0=	'table' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getTableTableKeyword_1_2_0_0(), "table"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "table", true, "table", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_name_14_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getNameSTRINGTerminalRuleCall_1_2_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_14_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getEqualsSignKeyword_1_2_2(), null); 
    }
((
(
		lv_inactive_16_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getInactiveInactiveKeyword_1_2_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getStructureStructurePOJOMappingCrossReference_1_2_3_1_0_0(), "structure"); 
	}

)
)(
(
		lv_attribute_18_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getAttributeIDTerminalRuleCall_1_2_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_18_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))))(	'comment' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getCommentKeyword_2_0(), null); 
    }
(
(
		lv_comment_20_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getCommentSTRINGTerminalRuleCall_2_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOImportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_20_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOImportingParameterAccess().getSemicolonKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleFunctionModulePOJOExportingParameter
entryRuleFunctionModulePOJOExportingParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModulePOJOExportingParameterRule(), currentNode); }
	 iv_ruleFunctionModulePOJOExportingParameter=ruleFunctionModulePOJOExportingParameter 
	 { $current=$iv_ruleFunctionModulePOJOExportingParameter.current; } 
	 EOF 
;

// Rule FunctionModulePOJOExportingParameter
ruleFunctionModulePOJOExportingParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'exporting' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getExportingKeyword_0(), null); 
    }
((	'field' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getFieldKeyword_1_0_0(), null); 
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getNameSTRINGTerminalRuleCall_1_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getEqualsSignKeyword_1_0_2(), null); 
    }
((
(
		lv_inactive_4_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getInactiveInactiveKeyword_1_0_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getTypeDataTypeEnumRuleCall_1_0_3_1_0_0(), currentNode); 
	    }
		lv_type_5_0=ruleDataType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_5_0, 
	        		"DataType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_attribute_6_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getAttributeIDTerminalRuleCall_1_0_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_6_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))))
    |(	'structure' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getStructureKeyword_1_1_0(), null); 
    }
(
(
		lv_name_8_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getNameSTRINGTerminalRuleCall_1_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_8_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getEqualsSignKeyword_1_1_2(), null); 
    }
((
(
		lv_inactive_10_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getInactiveInactiveKeyword_1_1_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getStructureStructurePOJOMappingCrossReference_1_1_3_1_0_0(), "structure"); 
	}

)
)(
(
		lv_attribute_12_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getAttributeIDTerminalRuleCall_1_1_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_12_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))))
    |((
(
		lv_table_13_0=	'table' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getTableTableKeyword_1_2_0_0(), "table"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "table", true, "table", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_name_14_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getNameSTRINGTerminalRuleCall_1_2_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_14_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getEqualsSignKeyword_1_2_2(), null); 
    }
((
(
		lv_inactive_16_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getInactiveInactiveKeyword_1_2_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getStructureStructurePOJOMappingCrossReference_1_2_3_1_0_0(), "structure"); 
	}

)
)(
(
		lv_attribute_18_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getAttributeIDTerminalRuleCall_1_2_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_18_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))))(	'comment' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getCommentKeyword_2_0(), null); 
    }
(
(
		lv_comment_20_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getCommentSTRINGTerminalRuleCall_2_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOExportingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_20_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOExportingParameterAccess().getSemicolonKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleFunctionModulePOJOChangingParameter
entryRuleFunctionModulePOJOChangingParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModulePOJOChangingParameterRule(), currentNode); }
	 iv_ruleFunctionModulePOJOChangingParameter=ruleFunctionModulePOJOChangingParameter 
	 { $current=$iv_ruleFunctionModulePOJOChangingParameter.current; } 
	 EOF 
;

// Rule FunctionModulePOJOChangingParameter
ruleFunctionModulePOJOChangingParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'changing' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getChangingKeyword_0(), null); 
    }
((	'field' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getFieldKeyword_1_0_0(), null); 
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getNameSTRINGTerminalRuleCall_1_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getEqualsSignKeyword_1_0_2(), null); 
    }
((
(
		lv_inactive_4_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getInactiveInactiveKeyword_1_0_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getTypeDataTypeEnumRuleCall_1_0_3_1_0_0(), currentNode); 
	    }
		lv_type_5_0=ruleDataType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_5_0, 
	        		"DataType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_attribute_6_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getAttributeIDTerminalRuleCall_1_0_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_6_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))))
    |(	'structure' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getStructureKeyword_1_1_0(), null); 
    }
(
(
		lv_name_8_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getNameSTRINGTerminalRuleCall_1_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_8_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getEqualsSignKeyword_1_1_2(), null); 
    }
((
(
		lv_inactive_10_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getInactiveInactiveKeyword_1_1_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getStructureStructurePOJOMappingCrossReference_1_1_3_1_0_0(), "structure"); 
	}

)
)(
(
		lv_attribute_12_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getAttributeIDTerminalRuleCall_1_1_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_12_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))))
    |((
(
		lv_table_13_0=	'table' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getTableTableKeyword_1_2_0_0(), "table"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "table", true, "table", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_name_14_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getNameSTRINGTerminalRuleCall_1_2_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_14_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getEqualsSignKeyword_1_2_2(), null); 
    }
((
(
		lv_inactive_16_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getInactiveInactiveKeyword_1_2_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getStructureStructurePOJOMappingCrossReference_1_2_3_1_0_0(), "structure"); 
	}

)
)(
(
		lv_attribute_18_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getAttributeIDTerminalRuleCall_1_2_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_18_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))))(	'comment' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getCommentKeyword_2_0(), null); 
    }
(
(
		lv_comment_20_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getCommentSTRINGTerminalRuleCall_2_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOChangingParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_20_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOChangingParameterAccess().getSemicolonKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleFunctionModulePOJOTablesParameter
entryRuleFunctionModulePOJOTablesParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionModulePOJOTablesParameterRule(), currentNode); }
	 iv_ruleFunctionModulePOJOTablesParameter=ruleFunctionModulePOJOTablesParameter 
	 { $current=$iv_ruleFunctionModulePOJOTablesParameter.current; } 
	 EOF 
;

// Rule FunctionModulePOJOTablesParameter
ruleFunctionModulePOJOTablesParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'table' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getTableKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getNameSTRINGTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOTablesParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getEqualsSignKeyword_2(), null); 
    }
((
(
		lv_inactive_3_0=	'inactive' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getInactiveInactiveKeyword_3_0_0(), "inactive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOTablesParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inactive", true, "inactive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOTablesParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getStructureStructurePOJOMappingCrossReference_3_1_0_0(), "structure"); 
	}

)
)(
(
		lv_attribute_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getAttributeIDTerminalRuleCall_3_1_1_0(), "attribute"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOTablesParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attribute",
	        		lv_attribute_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))(	'comment' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getCommentKeyword_4_0(), null); 
    }
(
(
		lv_comment_7_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getCommentSTRINGTerminalRuleCall_4_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionModulePOJOTablesParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_7_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getFunctionModulePOJOTablesParameterAccess().getSemicolonKeyword_5(), null); 
    }
)
;





// Rule DataType
ruleDataType returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'BigDecimal' 
	{
        $current = grammarAccess.getDataTypeAccess().getBIG_DECIMALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getBIG_DECIMALEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'BigInteger' 
	{
        $current = grammarAccess.getDataTypeAccess().getBIG_INTEGEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getBIG_INTEGEREnumLiteralDeclaration_1(), null); 
    }
)
    |(	'Boolean' 
	{
        $current = grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'Byte' 
	{
        $current = grammarAccess.getDataTypeAccess().getBYTEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getBYTEEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'ByteArray' 
	{
        $current = grammarAccess.getDataTypeAccess().getBYTE_ARRAYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getBYTE_ARRAYEnumLiteralDeclaration_4(), null); 
    }
)
    |(	'Char' 
	{
        $current = grammarAccess.getDataTypeAccess().getCHAREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getCHAREnumLiteralDeclaration_5(), null); 
    }
)
    |(	'CharArray' 
	{
        $current = grammarAccess.getDataTypeAccess().getCHAR_ARRAYEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getCHAR_ARRAYEnumLiteralDeclaration_6(), null); 
    }
)
    |(	'Date' 
	{
        $current = grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_7(), null); 
    }
)
    |(	'Double' 
	{
        $current = grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_8(), null); 
    }
)
    |(	'Float' 
	{
        $current = grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_9(), null); 
    }
)
    |(	'Integer' 
	{
        $current = grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_10(), null); 
    }
)
    |(	'Long' 
	{
        $current = grammarAccess.getDataTypeAccess().getLONGEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getLONGEnumLiteralDeclaration_11(), null); 
    }
)
    |(	'Short' 
	{
        $current = grammarAccess.getDataTypeAccess().getSHORTEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getSHORTEnumLiteralDeclaration_12(), null); 
    }
)
    |(	'String' 
	{
        $current = grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_13(), null); 
    }
)
    |(	'Time' 
	{
        $current = grammarAccess.getDataTypeAccess().getTIMEEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getDataTypeAccess().getTIMEEnumLiteralDeclaration_14(), null); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


