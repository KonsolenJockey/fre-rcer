/**
 * Copyright (c) 2009 The RCER Development Team.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html. If redistributing this code,
 * this entire header must remain intact.
 *
 * $Id$
 */
grammar net.sf.rcer.rfcgen.RFCMapping with org.eclipse.xtext.common.Terminals
generate mapping "http://www.sf.net/rcer/RFCMapping"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	"package" packageName=STRING
	(structures += Structure)*
	(functionModules += FunctionModule)*;

// ====== Basic Types =============================================================================

enum DataType:
	BIG_DECIMAL = "BigDecimal" | 
	BIG_INTEGER = "BigInteger" | 
	BOOLEAN     = "Boolean"    | 
	BYTE        = "Byte"       |
	BYTE_ARRAY  = "ByteArray"  | 
	CHAR        = "Char"       | 
	CHAR_ARRAY  = "CharArray"  |
	DATE        = "Date"       | 
	DOUBLE      = "Double"     | 
	FLOAT       = "Float"      |
	INTEGER     = "Integer"    | 
	LONG        = "Long"       | 
	SHORT       = "Short"      | 
	STRING      = "String"     | 
	TIME        = "Time";

// ====== Structures ==============================================================================

Structure:
	"structure" name=STRING "{"
		mapping = StructureMapping
	"}";

StructureMapping:
	StructurePOJOMapping;

// --- POJO mapping -------------------------------------------------------------------------------

StructurePOJOMapping:
	 "class" className=ID "{"
		(fields += StructureFieldPOJOMapping ";")*
	"}";
	
StructureFieldPOJOMapping: 
	"field" name=STRING 
	"=" (inactive?="inactive" | type=DataType attribute=ID) 
	("comment" comment=STRING)?;

// ====== Function Modules ========================================================================

FunctionModule: 
	"function" "module" name=STRING "{"
		mapping=FunctionModuleMapping
	"}";
	
FunctionModuleMapping: 
	FunctionModulePOJOMapping;

// --- POJO mapping -------------------------------------------------------------------------------

FunctionModulePOJOMapping: 
	FunctionModulePOJOCallMapping | 
	FunctionModulePOJORequestResponseMapping;

FunctionModulePOJOCallMapping: 
	"class" className=ID "{"
		(parameters += FunctionModulePOJOParameterMapping)*
	"}";

FunctionModulePOJORequestResponseMapping: 
	"request" "class" requestClassName=ID "{"
		(requestParameters += FunctionModulePOJOParameterMapping)*
	"}"
	"response" "class" responseClassName=ID "{"
		(responseParameters += FunctionModulePOJOParameterMapping)*
	"}";

FunctionModulePOJOParameterMapping:
	FunctionModulePOJOImportingParameter | 
	FunctionModulePOJOExportingParameter | 
	FunctionModulePOJOChangingParameter  | 
	FunctionModulePOJOTablesParameter; 

FunctionModulePOJOImportingParameter: 
	"importing" ( "field"        name=STRING "=" (inactive?="inactive" | type=DataType attribute=ID) |
	              "structure"    name=STRING "=" (inactive?="inactive" | structure=[Structure] attribute=ID) |
	              table?="table" name=STRING "=" (inactive?="inactive" | structure=[Structure] attribute=ID) )
	             ("comment" comment=STRING)? ";";

FunctionModulePOJOExportingParameter: 
	"exporting" ( "field"        name=STRING "=" (inactive?="inactive" | type=DataType attribute=ID) |
	              "structure"    name=STRING "=" (inactive?="inactive" | structure=[Structure] attribute=ID) |
	              table?="table" name=STRING "=" (inactive?="inactive" | structure=[Structure] attribute=ID) )
	             ("comment" comment=STRING)? ";";
	
FunctionModulePOJOChangingParameter: 
	"changing"  ( "field"        name=STRING "=" (inactive?="inactive" | type=DataType attribute=ID) |
	              "structure"    name=STRING "=" (inactive?="inactive" | structure=[Structure] attribute=ID) |
	              table?="table" name=STRING "=" (inactive?="inactive" | structure=[Structure] attribute=ID) )
	             ("comment" comment=STRING)? ";";

FunctionModulePOJOTablesParameter:
	"table"     name=STRING "=" (inactive?="inactive" | structure=[Structure] attribute=ID)
	             ("comment" comment=STRING)? ";";
